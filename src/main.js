// ===== TRANSLATIONS MODULE =====
const TRANSLATIONS = {
    en: {
        "nav.projects": "Projects",
        "nav.about": "About",
        "nav.contact": "Contact",
        "hero.label": "Frontend Developer & Designer",
        "hero.title": "Clean Code.<br />Smart Design.",
        "hero.description": "I build fast, modern, and minimal websites that focus on usability and visual impact.",
        "hero.cta": "View Projects",
        "projects.title": "Projects",
        "projects.project1.title": "AI Portfolio Landing",
        "projects.project1.description": "A dark, minimal landing page for showcasing web & design projects. Fully responsive and animated.",
        "projects.project2.title": "Minimal Business Website",
        "projects.project2.description": "A 3-page responsive business site with clean typography and optimized performance.",
        "projects.project3.title": "AI Dashboard UI",
        "projects.project3.description": "Frontend dashboard prototype with charts, stat cards, and dark/light mode.",
        "projects.project4.title": "Product Landing Page",
        "projects.project4.description": "A modern product landing built for conversion, featuring animations and CTA blocks.",
        "projects.project5.title": "Brand Identity Pack",
        "projects.project5.description": "Brand style guide with logo, color palette, and mockups ‚Äî simple, clean, and consistent.",
        "projects.viewLive": "View Live ‚Üí",
        "about.title": "About",
        "about.text1": "I'm Mykola ‚Äî a frontend developer and designer focused on creating fast, minimal, and user-friendly web interfaces.",
        "about.text2": "I enjoy building from scratch: from idea and design to clean, responsive code. My main tools are HTML, CSS, JavaScript, and React.",
        "about.text3": "I aim for clarity, smooth user flow, and efficient structure in every project.",
        "about.skill1.title": "Frontend",
        "about.skill1.text": "HTML, CSS, JS, React",
        "about.skill2.title": "Design",
        "about.skill2.text": "Figma, UI/UX, Branding",
        "about.skill3.title": "Workflow",
        "about.skill3.text": "Git, Vite, Responsive",
        "contact.title": "Let's Connect",
        "contact.intro": "Ready to collaborate? Reach me through any platform below.",
        "footer.text": "¬© 2025 Mykola Portfolio. All rights reserved."
    },
    uk: {
        "nav.projects": "–ü—Ä–æ—î–∫—Ç–∏",
        "nav.about": "–ü—Ä–æ –º–µ–Ω–µ",
        "nav.contact": "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
        "hero.label": "Frontend —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ —ñ –¥–∏–∑–∞–π–Ω–µ—Ä",
        "hero.title": "–ß–∏—Å—Ç–∏–π –∫–æ–¥.<br />–†–æ–∑—É–º–Ω–∏–π –¥–∏–∑–∞–π–Ω.",
        "hero.description": "–°—Ç–≤–æ—Ä—é—é —à–≤–∏–¥–∫—ñ, —Å—É—á–∞—Å–Ω—ñ —Ç–∞ –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ —Å–∞–π—Ç–∏ –∑ —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –∑—Ä—É—á–Ω—ñ—Å—Ç—å —Ç–∞ –≤—ñ–∑—É–∞–ª—å–Ω–∏–π –≤–ø–ª–∏–≤.",
        "hero.cta": "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø—Ä–æ—î–∫—Ç–∏",
        "projects.title": "–ü—Ä–æ—î–∫—Ç–∏",
        "projects.project1.title": "AI Portfolio Landing",
        "projects.project1.description": "–¢–µ–º–Ω–∞ –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –≤–µ–±-–ø—Ä–æ—î–∫—Ç—ñ–≤ —ñ –¥–∏–∑–∞–π–Ω—É. –ü–æ–≤–Ω—ñ—Å—Ç—é –∞–¥–∞–ø—Ç–∏–≤–Ω–∞ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—è–º–∏.",
        "projects.project2.title": "–°–∞–π—Ç –±—ñ–∑–Ω–µ—Å—É",
        "projects.project2.description": "3-—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–∏–π –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–π —Å–∞–π—Ç –∑ —á–∏—Å—Ç–æ—é —Ç–∏–ø–æ–≥—Ä–∞—Ñ—ñ–∫–æ—é —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é.",
        "projects.project3.title": "AI Dashboard UI",
        "projects.project3.description": "–ü—Ä–æ—Ç–æ—Ç–∏–ø –ø–∞–Ω–µ–ª—ñ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑ –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏, –∫–∞—Ä—Ç–∫–∞–º–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–∞ —Ç–µ–º–Ω–æ—é —Ç–µ–º–æ—é.",
        "projects.project4.title": "Product Landing",
        "projects.project4.description": "–°—É—á–∞—Å–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—è–º–∏ —Ç–∞ –±–ª–æ–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó.",
        "projects.project5.title": "Brand Identity Pack",
        "projects.project5.description": "–ì–∞–π–¥ –±—Ä–µ–Ω–¥—É –∑ –ª–æ–≥–æ—Ç–∏–ø–æ–º, –∫–æ–ª—å–æ—Ä–æ–≤–æ—é –ø–∞–ª—ñ—Ç—Ä–æ—é —Ç–∞ –º–æ–∫–∞–ø–∞–º–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ, —á–∏—Å—Ç–æ, –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ.",
        "projects.viewLive": "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ ‚Üí",
        "about.title": "–ü—Ä–æ –º–µ–Ω–µ",
        "about.text1": "–Ø –ú–∏–∫–æ–ª–∞ ‚Äî frontend —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ —ñ –¥–∏–∑–∞–π–Ω–µ—Ä, –∑–æ—Å–µ—Ä–µ–¥–∂–µ–Ω–∏–π –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —à–≤–∏–¥–∫–∏—Ö, –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω–∏—Ö —Ç–∞ –∑—Ä—É—á–Ω–∏—Ö –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤.",
        "about.text2": "–õ—é–±–ª—é –±—É–¥—É–≤–∞—Ç–∏ –∑ –Ω—É–ª—è: –≤—ñ–¥ —ñ–¥–µ—ó —Ç–∞ –¥–∏–∑–∞–π–Ω—É –¥–æ —á–∏—Å—Ç–æ–≥–æ, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–¥—É. –ú–æ—ó –æ—Å–Ω–æ–≤–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ ‚Äî HTML, CSS, JavaScript —Ç–∞ React.",
        "about.text3": "–ü—Ä–∞–≥–Ω—É –¥–æ —á—ñ—Ç–∫–æ—Å—Ç—ñ, –ø–ª–∞–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–æ–≥–æ –ø–æ—Ç–æ–∫—É —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –≤ –∫–æ–∂–Ω–æ–º—É –ø—Ä–æ—î–∫—Ç—ñ.",
        "about.skill1.title": "Frontend",
        "about.skill1.text": "HTML, CSS, JS, React",
        "about.skill2.title": "–î–∏–∑–∞–π–Ω",
        "about.skill2.text": "Figma, UI/UX, Branding",
        "about.skill3.title": "Workflow",
        "about.skill3.text": "Git, Vite, Responsive",
        "contact.title": "–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é",
        "contact.intro": "–ì–æ—Ç–æ–≤—ñ –¥–æ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ? –ó–Ω–∞–π–¥—ñ—Ç—å –º–µ–Ω–µ –Ω–∞ –±—É–¥—å-—è–∫—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ –Ω–∏–∂—á–µ.",
        "footer.text": "¬© 2025 –ú–∏–∫–æ–ª–∞ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ. –í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ."
    },
    ru: {
        "nav.projects": "–ü—Ä–æ–µ–∫—Ç—ã",
        "nav.about": "–û–±–æ –º–Ω–µ",
        "nav.contact": "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
        "hero.label": "Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –¥–∏–∑–∞–π–Ω–µ—Ä",
        "hero.title": "–ß–∏—Å—Ç—ã–π –∫–æ–¥.<br />–£–º–Ω—ã–π –¥–∏–∑–∞–π–Ω.",
        "hero.description": "–°–æ–∑–¥–∞—é –±—ã—Å—Ç—Ä—ã–µ, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å–∞–π—Ç—ã —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —É–¥–æ–±—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ.",
        "hero.cta": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã",
        "projects.title": "–ü—Ä–æ–µ–∫—Ç—ã",
        "projects.project1.title": "AI Portfolio Landing",
        "projects.project1.description": "–¢–µ–º–Ω–∞—è –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –¥–∏–∑–∞–π–Ω–∞. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏.",
        "projects.project2.title": "–°–∞–π—Ç –±–∏–∑–Ω–µ—Å–∞",
        "projects.project2.description": "3-—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç —Å —á–∏—Å—Ç–æ–π —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–æ–π –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.",
        "projects.project3.title": "AI Dashboard UI",
        "projects.project3.description": "–ü—Ä–æ—Ç–æ—Ç–∏–ø –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏, –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π.",
        "projects.project4.title": "Product Landing",
        "projects.project4.description": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –±–ª–æ–∫–∞–º–∏ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏.",
        "projects.project5.title": "Brand Identity Pack",
        "projects.project5.description": "–ì–∞–π–¥ –±—Ä–µ–Ω–¥–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º, —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä–æ–π –∏ –º–æ–∫–∞–ø–∞–º–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ, —á–∏—Å—Ç–æ, –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ.",
        "projects.viewLive": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ‚Üí",
        "about.title": "–û–±–æ –º–Ω–µ",
        "about.text1": "–Ø –ú–∏–∫–æ–ª–∞ ‚Äî frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –¥–∏–∑–∞–π–Ω–µ—Ä, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω—ã–π –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ã—Å—Ç—Ä—ã—Ö, –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏ —É–¥–æ–±–Ω—ã—Ö –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.",
        "about.text2": "–õ—é–±–ª—é —Å—Ç—Ä–æ–∏—Ç—å —Å –Ω—É–ª—è: –æ—Ç –∏–¥–µ–∏ –∏ –¥–∏–∑–∞–π–Ω–∞ –¥–æ —á–∏—Å—Ç–æ–≥–æ, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–¥–∞. –ú–æ–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî HTML, CSS, JavaScript –∏ React.",
        "about.text3": "–°—Ç—Ä–µ–º–ª—é—Å—å –∫ —á–µ—Ç–∫–æ—Å—Ç–∏, –ø–ª–∞–≤–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –ø–æ—Ç–æ–∫—É –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –≤ –∫–∞–∂–¥–æ–º –ø—Ä–æ–µ–∫—Ç–µ.",
        "about.skill1.title": "Frontend",
        "about.skill1.text": "HTML, CSS, JS, React",
        "about.skill2.title": "–î–∏–∑–∞–π–Ω",
        "about.skill2.text": "Figma, UI/UX, Branding",
        "about.skill3.title": "Workflow",
        "about.skill3.text": "Git, Vite, Responsive",
        "contact.title": "–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π",
        "contact.intro": "–ì–æ—Ç–æ–≤—ã –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É? –ù–∞–π–¥–∏—Ç–µ –º–µ–Ω—è –Ω–∞ –ª—é–±–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–∏–∂–µ.",
        "footer.text": "¬© 2025 –ú–∏–∫–æ–ª–∞ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã."
    }
};

const LANGUAGE_FLAGS = {
    en: 'üá¨üáß',
    uk: 'üá∫üá¶',
    ru: 'üá∑üá∫'
};

const CONFIG = {
    defaultLang: 'en',
    storageKey: 'portfolio_language',
    navOffset: 80,
    scrollThreshold: 100,
    parallaxSpeed: {
        content: 0.3,
        visual: 0.15
    },
    aos: {
        duration: 1000,
        once: true,
        offset: 100
    }
};

// ===== UTILITY FUNCTIONS =====
const Utils = {
    debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    },

    throttle(func) {
        let ticking = false;
        return function(...args) {
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    func.apply(this, args);
                    ticking = false;
                });
                ticking = true;
            }
        };
    },

    getStorageItem(key, defaultValue) {
        try {
            return localStorage.getItem(key) || defaultValue;
        } catch (e) {
            console.warn('localStorage not available:', e);
            return defaultValue;
        }
    },

    setStorageItem(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
            console.warn('localStorage not available:', e);
        }
    }
};

// ===== LANGUAGE MANAGER =====
class LanguageManager {
    constructor() {
        this.currentLang = Utils.getStorageItem(CONFIG.storageKey, CONFIG.defaultLang);
        this.elements = {
            langBtn: document.getElementById('currentLang'),
            langDropdown: document.getElementById('langDropdown'),
            langOptions: document.querySelectorAll('.lang-option')
        };
    }

    init() {
        this.translatePage(this.currentLang);
        this.bindEvents();
    }

    translatePage(lang) {
        if (!TRANSLATIONS[lang]) {
            console.error(`Language "${lang}" not found`);
            return;
        }

        document.querySelectorAll('[data-i18n]').forEach(el => {
            const key = el.getAttribute('data-i18n');
            const translation = TRANSLATIONS[lang][key];

            if (translation) {
                if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA') {
                    el.placeholder = translation;
                } else {
                    el.innerHTML = translation;
                }
            }
        });

        this.updateUI(lang);
        this.currentLang = lang;
        Utils.setStorageItem(CONFIG.storageKey, lang);

        if (typeof AOS !== 'undefined') {
            AOS.refresh();
        }
    }

    updateUI(lang) {
        const { langBtn, langOptions } = this.elements;

        if (langBtn) {
            const flagEl = langBtn.querySelector('.flag');
            if (flagEl) flagEl.textContent = LANGUAGE_FLAGS[lang];
        }

        langOptions.forEach(option => {
            option.classList.toggle('active', option.dataset.lang === lang);
        });
    }

    bindEvents() {
        const { langBtn, langDropdown, langOptions } = this.elements;

        if (langBtn && langDropdown) {
            langBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                langDropdown.classList.toggle('active');
            });

            document.addEventListener('click', (e) => {
                if (!langBtn.contains(e.target) && !langDropdown.contains(e.target)) {
                    langDropdown.classList.remove('active');
                }
            });
        }

        langOptions.forEach(option => {
            option.addEventListener('click', () => {
                this.translatePage(option.dataset.lang);
                langDropdown?.classList.remove('active');
            });
        });
    }
}

// ===== NAVIGATION MANAGER =====
class NavigationManager {
    constructor() {
        this.elements = {
            nav: document.querySelector('.nav'),
            navLinks: document.querySelectorAll('.nav-link'),
            sections: document.querySelectorAll('section[id]')
        };
    }

    init() {
        this.bindEvents();
    }

    bindEvents() {
        // Smooth scroll
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', (e) => this.handleAnchorClick(e));
        });

        // Scroll handling
        window.addEventListener('scroll', Utils.throttle(() => this.handleScroll()));
    }

    handleAnchorClick(e) {
        e.preventDefault();
        const target = document.querySelector(e.currentTarget.getAttribute('href'));

        if (target) {
            window.scrollTo({
                top: target.offsetTop - CONFIG.navOffset,
                behavior: 'smooth'
            });
        }
    }

    handleScroll() {
        const scrolled = window.pageYOffset;
        const { nav, navLinks, sections } = this.elements;

        // Navigation background
        nav?.classList.toggle('scrolled', scrolled > CONFIG.scrollThreshold);

        // Active link
        let current = '';
        sections.forEach(section => {
            if (scrolled >= section.offsetTop - 150) {
                current = section.getAttribute('id');
            }
        });

        navLinks.forEach(link => {
            const href = link.getAttribute('href');
            link.classList.toggle('active', href && href.slice(1) === current);
        });
    }
}

// ===== PARALLAX MANAGER =====
class ParallaxManager {
    constructor() {
        this.elements = {
            heroContent: document.querySelector('.hero-content'),
            heroVisual: document.querySelector('.hero-visual')
        };
    }

    init() {
        window.addEventListener('scroll', Utils.throttle(() => this.handleScroll()));
    }

    handleScroll() {
        const scrolled = window.pageYOffset;
        const { heroContent, heroVisual } = this.elements;

        if (scrolled < window.innerHeight) {
            if (heroContent) {
                heroContent.style.transform = `translateY(${scrolled * CONFIG.parallaxSpeed.content}px)`;
                heroContent.style.opacity = Math.max(0, 1 - (scrolled / 700));
            }

            if (heroVisual) {
                heroVisual.style.transform = `translateY(${scrolled * CONFIG.parallaxSpeed.visual}px)`;
            }
        }
    }
}

// ===== PROJECTS MANAGER =====
class ProjectsManager {
    constructor() {
        this.cards = document.querySelectorAll('.project-card');
    }

    init() {
        this.cards.forEach(card => {
            card.addEventListener('mouseenter', () => this.handleHover(card));
            card.addEventListener('mouseleave', () => this.handleLeave(card));
        });
    }

    handleHover(card) {
        card.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
    }

    handleLeave(card) {
        card.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
    }
}

// ===== ANIMATION MANAGER =====
class AnimationManager {
    init() {
        if (typeof AOS !== 'undefined') {
            AOS.init(CONFIG.aos);
        } else {
            console.warn('AOS library not loaded');
        }
    }
}

// ===== CONSOLE BRANDING =====
class ConsoleBranding {
    static init() {
        const styles = {
            title: 'color: #6366f1; font-size: 24px; font-weight: bold;',
            subtitle: 'color: #a1a1aa; font-size: 14px;',
            cta: 'color: #6366f1; font-size: 14px;'
        };

        console.log('%c–ú–∏–∫–æ–ª–∞ –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ', styles.title);
        console.log('%c–°—Ç–≤–æ—Ä–µ–Ω–æ –∑ HTML, CSS —Ç–∞ JavaScript', styles.subtitle);
        console.log('%c–ó–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ —É —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ? –ó–≤\'—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é!', styles.cta);
    }
}

// ===== APPLICATION BOOTSTRAP =====
class App {
    constructor() {
        this.modules = [
            new LanguageManager(),
            new NavigationManager(),
            new ParallaxManager(),
            new ProjectsManager(),
            new AnimationManager()
        ];
    }

    init() {
        this.modules.forEach(module => module.init());
        ConsoleBranding.init();
    }
}

// ===== INITIALIZATION =====
document.addEventListener('DOMContentLoaded', () => {
    const app = new App();
    app.init();
});
